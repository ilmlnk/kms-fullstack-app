// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Main 

model Subject {
  id              Int       @id @default(autoincrement())
  object_id       String?   @unique
  author_id       String    @unique
  tenant_id       String    @unique
  creation_date   DateTime
  updating_date   DateTime? @updatedAt
  deleted         Boolean?  @default(false)
  version_counter Int?
  title           String
  description     String?
  image_url       String?
  is_published    Boolean?  @default(false)

  category_id String?
  category    Category? @relation(fields: [categoryId], references: [id])

  children    Child[]
  attachments Attachment[]
  Event       Event[]
  categoryId  Int?

  @@index([category_id])
}

model Event {
  id              Int       @id @default(autoincrement())
  object_id       String    @unique
  author_id       String    @unique
  tenant_id       String    @unique
  creation_date   DateTime
  updating_date   DateTime? @updatedAt
  deleted         Boolean?  @default(false)
  version_counter Int?
  title           String
  subject         Subject?  @relation(fields: [subjectId], references: [id])
  subjectId       Int?
  starting_date   DateTime
  ending_date     DateTime
  type            String?
  description     String?
  teacher         Teacher?  @relation(fields: [teacherId], references: [id])
  teacherId       Int?
  group           String?
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  subject Subject[]
}

model Teacher {
  id                 Int      @id @default(autoincrement())
  object_id          String   @unique
  author_id          String   @unique
  tenant_id          String   @unique
  creation_date      DateTime
  deleted            Boolean
  version_counter    Int?
  first_name         String
  last_name          String
  email              String   @unique
  phone_number       String   @unique
  username           String   @unique
  encrypted_password String
  Event              Event[]
  User               User[]
}

model Parent {
  id                 Int       @id @default(autoincrement())
  object_id          String?   @unique
  author_id          String?   @unique
  tenant_id          String?   @unique
  creation_date      DateTime?
  deleted            Boolean?
  version_counter    Int?
  first_name         String?
  last_name          String?
  id_code            String?    
  email              String?    
  phone_number       String?    
  username           String?    
  encrypted_password String?
  Child              Child?    @relation(fields: [childId], references: [id])
  childId            Int?
  User               User[]
}

model Child {
  id              Int      @id @default(autoincrement())
  object_id       String
  author_id       String
  tenant_id       String
  creation_date   DateTime
  deleted         Boolean
  version_counter Int?
  first_name      String
  last_name       String
  parents         Parent[]
  subject         Subject? @relation(fields: [subjectId], references: [id])
  subjectId       Int
}

model Administrator {
  id                 Int      @id @default(autoincrement())
  object_id          String   @unique
  author_id          String   @unique
  tenant_id          String   @unique
  creation_date      DateTime
  deleted            Boolean
  version_counter    BigInt?
  email              String   @unique
  username           String   @unique
  phone_number       String   @unique
  encrypted_password String
  User               User[]
}

model User {
  id              Int      @id @default(autoincrement())
  object_id       String   @unique
  author_id       String   @unique
  tenant_id       String   @unique
  creation_date   DateTime
  deleted         Boolean
  version_counter Int?
  email           String?   
  phone_number    String?   
  role            String
  username        String 
  password        String

  parent          Parent?        @relation(fields: [parentId], references: [id])
  administrator   Administrator? @relation(fields: [administratorId], references: [id])
  teacher         Teacher?       @relation(fields: [teacherId], references: [id])
  parentId        Int?
  administratorId Int?
  teacherId       Int?
}

model Attachment {
  id   Int    @id @default(autoincrement())
  name String
  url  String

  subject_id Int
  subject    Subject? @relation(fields: [subjectId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  subjectId  Int?

  @@index([subject_id])
}
